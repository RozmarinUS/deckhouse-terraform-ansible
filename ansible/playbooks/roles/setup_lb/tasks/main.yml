- name: Install haproxy & keepalived packages
  apt:
    name: "{{ item }}"
    state: present
  retries: 3
  loop:
    - haproxy
    - keepalived

- name: Configure haproxy.cfg
  blockinfile:
    path: /etc/haproxy/haproxy.cfg
    block: |
      frontend kubernetes-frontend
        bind *:6445
        mode tcp
        option tcplog
        default_backend kubernetes-backend

      backend kubernetes-backend
        option httpchk GET /healthz
        http-check expect status 200
        mode tcp
        option ssl-hello-chk
        balance roundrobin
          server kube-master1 {{ lookup('env', 'ip_address_kube_master_1') }}:6445 check fall 3 rise 2

      frontend ingress-frontend
        bind *:80
        mode http
        option httplog
        default_backend ingress-backend

      frontend ingress-frontend-ssl
        bind *:443
        mode tcp
        option tcplog
        default_backend ingress-backend-ssl

      backend ingress-backend
        balance roundrobin
        mode http
        http-check expect status 200
          server ingress1 {{ lookup('env', 'ip_address_kube_ingress_1') }}:80 check fall 3 rise 2

      backend ingress-backend-ssl
        balance roundrobin
        mode tcp
        option ssl-hello-chk
          server ingress1 {{ lookup('env', 'ip_address_kube_ingress_1') }}:443 check fall 3 rise 2
    marker: "#<!-- {mark} ANSIBLE MANAGED BLOCK -->"
    state: present
  register: res1

- name: Restart haproxy
  systemd:
    name: haproxy
    state: restarted
    enabled: yes
  when: res1.changed

- name: Configure check_apiserver.sh
  copy:
    dest: /etc/keepalived/check_apiserver.sh
    content: |
      #!/bin/sh

      errorExit() {
        echo "*** $@" 1>&2
        exit 1
      }

      curl --silent --max-time 2 --insecure https://localhost:6443/ -o /dev/null || errorExit "Error GET https://localhost:6443/"
      if ip addr | grep -q {{ lookup('env', 'k8s_control_plane_endpoint') }}; then
        curl --silent --max-time 2 --insecure https://{{ lookup('env', 'k8s_control_plane_endpoint') }}:6443/ -o /dev/null || errorExit "Error GET https://{{ lookup('env', 'k8s_control_plane_endpoint') }}:6443/"
      fi
    mode: "a+x"
  register: res2

- name: Configure keepalived.conf
  blockinfile:
    path: /etc/keepalived/keepalived.conf
    create: yes
    block: |
      vrrp_script check_apiserver {
        script "/etc/keepalived/check_apiserver.sh"
        interval 3
        timeout 10
        fall 5
        rise 2
        weight -2
      }

      vrrp_instance VI_1 {
          state BACKUP
          interface ens01
          virtual_router_id 1
          priority 100
          advert_int 5
          authentication {
              auth_type PASS
              auth_pass mysecret
          }
          virtual_ipaddress {
              {{ lookup('env', 'k8s_control_plane_endpoint') }}
              {{ lookup('env', 'k8s_ingress_endpoint') }}
          }
          track_script {
              check_apiserver
          }
      }
    marker: "#<!-- {mark} ANSIBLE MANAGED BLOCK -->"
    state: present
  register: res3

- name: Restart keepalived
  systemd:
    name: keepalived
    state: restarted
    enabled: yes
  when: res2.changed or res3.changed
